CL-USER 1 > (breadth-first (fwgc))
Evaluating Node: ((T T T T) NIL)
Evaluating Node: ((NIL T NIL NIL) (T T T T))
Evaluating Node: ((T NIL T T) (NIL T NIL NIL))
Evaluating Node: ((T T NIL NIL) (T NIL T T))
Evaluating Node: ((NIL T T NIL) (T NIL T T))
Evaluating Node: ((NIL T T T) (T T NIL NIL))
Evaluating Node: ((T T NIL T) (NIL T T NIL))
Evaluating Node: ((T NIL T NIL) (NIL T T T))
Evaluating Node: ((NIL T NIL T) (T NIL T NIL))
Evaluating Node: ((T T T NIL) (NIL T NIL T))
Length of *open*: 1
Length of *closed*: 9
Solution Path: ((T T T T) (NIL T NIL NIL) (T NIL T T) (T T NIL NIL) (NIL T T T) (T NIL T NIL) (NIL T NIL T) (T T T NIL))
((T T T T) (NIL T NIL NIL) (T NIL T T) (T T NIL NIL) (NIL T T T) (T NIL T NIL) (NIL T NIL T) (T T T NIL))

CL-USER 2 > (depth-first (fwgc))
Evaluating Node: ((T T T T) NIL)
Evaluating Node: ((NIL T NIL NIL) (T T T T))
Evaluating Node: ((T NIL T T) (NIL T NIL NIL))
Evaluating Node: ((T T NIL NIL) (T NIL T T))
Evaluating Node: ((NIL T T T) (T T NIL NIL))
Evaluating Node: ((T NIL T NIL) (NIL T T T))
Evaluating Node: ((NIL T NIL T) (T NIL T NIL))
Evaluating Node: ((T T T NIL) (NIL T NIL T))
Length of *open*: 3
Length of *closed*: 7
Solution Path: ((T T T T) (NIL T NIL NIL) (T NIL T T) (T T NIL NIL) (NIL T T T) (T NIL T NIL) (NIL T NIL T) (T T T NIL))
((T T T T) (NIL T NIL NIL) (T NIL T T) (T T NIL NIL) (NIL T T T) (T NIL T NIL) (NIL T NIL T) (T T T NIL))


CL-USER 3 > (breadth-first (water-jugs))
Evaluating Node: ((0 0) NIL)
Evaluating Node: ((4 0) (0 0))
Evaluating Node: ((0 11) (0 0))
Evaluating Node: ((4 11) (4 0))
Evaluating Node: ((0 4) (4 0))
Evaluating Node: ((4 7) (0 11))
Evaluating Node: ((4 4) (0 4))
Evaluating Node: ((0 7) (4 7))
Evaluating Node: ((0 8) (4 4))
Evaluating Node: ((4 3) (0 7))
Evaluating Node: ((4 8) (0 8))
Evaluating Node: ((0 3) (4 3))
Evaluating Node: ((1 11) (4 8))
Evaluating Node: ((3 0) (0 3))
Evaluating Node: ((1 0) (1 11))
Length of *open*: 2
Length of *closed*: 14
Solution Path: ((0 0) (4 0) (0 4) (4 4) (0 8) (4 8) (1 11) (1 0))
((0 0) (4 0) (0 4) (4 4) (0 8) (4 8) (1 11) (1 0))

CL-USER 4 > (depth-first (water-jugs))
Evaluating Node: ((0 0) NIL)
Evaluating Node: ((4 0) (0 0))
Evaluating Node: ((4 11) (4 0))
Evaluating Node: ((0 4) (4 0))
Evaluating Node: ((4 4) (0 4))
Evaluating Node: ((0 8) (4 4))
Evaluating Node: ((4 8) (0 8))
Evaluating Node: ((1 11) (4 8))
Evaluating Node: ((1 0) (1 11))
Length of *open*: 2
Length of *closed*: 8
Solution Path: ((0 0) (4 0) (0 4) (4 4) (0 8) (4 8) (1 11) (1 0))
((0 0) (4 0) (0 4) (4 4) (0 8) (4 8) (1 11) (1 0))

CL-USER 5 > (breadth-first (8-tile '(7 0 5 1 6 4 2 8 3) '(7 6 5 8 0 4 1 2 3)))
Evaluating Node: ((7 0 5 1 6 4 2 8 3) NIL)
Evaluating Node: ((7 5 0 1 6 4 2 8 3) (7 0 5 1 6 4 2 8 3))
Evaluating Node: ((0 7 5 1 6 4 2 8 3) (7 0 5 1 6 4 2 8 3))
Evaluating Node: ((7 6 5 1 0 4 2 8 3) (7 0 5 1 6 4 2 8 3))
Evaluating Node: ((7 5 4 1 6 0 2 8 3) (7 5 0 1 6 4 2 8 3))
Evaluating Node: ((1 7 5 0 6 4 2 8 3) (0 7 5 1 6 4 2 8 3))
Evaluating Node: ((7 6 5 1 4 0 2 8 3) (7 6 5 1 0 4 2 8 3))
Evaluating Node: ((7 6 5 0 1 4 2 8 3) (7 6 5 1 0 4 2 8 3))
Evaluating Node: ((7 6 5 1 8 4 2 0 3) (7 6 5 1 0 4 2 8 3))
Evaluating Node: ((0 6 5 1 7 4 2 8 3) (7 6 5 1 0 4 2 8 3))
Evaluating Node: ((7 5 4 1 0 6 2 8 3) (7 5 4 1 6 0 2 8 3))
Evaluating Node: ((7 5 4 1 6 3 2 8 0) (7 5 4 1 6 0 2 8 3))
Evaluating Node: ((0 5 4 1 6 7 2 8 3) (7 5 4 1 6 0 2 8 3))
Evaluating Node: ((1 7 5 6 0 4 2 8 3) (1 7 5 0 6 4 2 8 3))
Evaluating Node: ((1 7 5 2 6 4 0 8 3) (1 7 5 0 6 4 2 8 3))
Evaluating Node: ((7 6 5 1 4 3 2 8 0) (7 6 5 1 4 0 2 8 3))
Evaluating Node: ((0 6 5 1 4 7 2 8 3) (7 6 5 1 4 0 2 8 3))
Evaluating Node: ((7 6 5 2 1 4 0 8 3) (7 6 5 0 1 4 2 8 3))
Evaluating Node: ((0 6 5 7 1 4 2 8 3) (7 6 5 0 1 4 2 8 3))
Evaluating Node: ((7 6 5 1 8 4 2 3 0) (7 6 5 1 8 4 2 0 3))
Evaluating Node: ((7 6 5 1 8 4 0 2 3) (7 6 5 1 8 4 2 0 3))
Evaluating Node: ((7 6 5 0 8 4 2 1 3) (7 6 5 1 8 4 2 0 3))
Evaluating Node: ((6 0 5 1 7 4 2 8 3) (0 6 5 1 7 4 2 8 3))
Evaluating Node: ((1 6 5 0 7 4 2 8 3) (0 6 5 1 7 4 2 8 3))
Evaluating Node: ((7 5 4 0 1 6 2 8 3) (7 5 4 1 0 6 2 8 3))
Evaluating Node: ((7 5 4 1 8 6 2 0 3) (7 5 4 1 0 6 2 8 3))
Evaluating Node: ((0 5 4 1 7 6 2 8 3) (7 5 4 1 0 6 2 8 3))
Evaluating Node: ((7 5 4 1 6 3 2 0 8) (7 5 4 1 6 3 2 8 0))
Evaluating Node: ((7 5 4 0 6 3 2 8 1) (7 5 4 1 6 3 2 8 0))
Evaluating Node: ((5 0 4 1 6 7 2 8 3) (0 5 4 1 6 7 2 8 3))
Evaluating Node: ((1 5 4 0 6 7 2 8 3) (0 5 4 1 6 7 2 8 3))
Evaluating Node: ((1 7 5 6 4 0 2 8 3) (1 7 5 6 0 4 2 8 3))
Evaluating Node: ((1 7 5 6 8 4 2 0 3) (1 7 5 6 0 4 2 8 3))
Evaluating Node: ((0 7 5 6 1 4 2 8 3) (1 7 5 6 0 4 2 8 3))
Evaluating Node: ((1 7 5 2 6 4 8 0 3) (1 7 5 2 6 4 0 8 3))
Evaluating Node: ((7 6 5 1 4 3 2 0 8) (7 6 5 1 4 3 2 8 0))
Evaluating Node: ((7 6 5 0 4 3 2 8 1) (7 6 5 1 4 3 2 8 0))
Evaluating Node: ((6 0 5 1 4 7 2 8 3) (0 6 5 1 4 7 2 8 3))
Evaluating Node: ((1 6 5 0 4 7 2 8 3) (0 6 5 1 4 7 2 8 3))
Evaluating Node: ((7 6 5 2 1 4 8 0 3) (7 6 5 2 1 4 0 8 3))
Evaluating Node: ((6 0 5 7 1 4 2 8 3) (0 6 5 7 1 4 2 8 3))
Evaluating Node: ((7 6 5 0 8 4 2 3 1) (7 6 5 1 8 4 2 3 0))
Evaluating Node: ((7 6 5 0 8 4 1 2 3) (7 6 5 1 8 4 0 2 3))
Evaluating Node: ((7 6 5 8 0 4 2 1 3) (7 6 5 0 8 4 2 1 3))
Evaluating Node: ((7 6 5 2 8 4 0 1 3) (7 6 5 0 8 4 2 1 3))
Evaluating Node: ((0 6 5 7 8 4 2 1 3) (7 6 5 0 8 4 2 1 3))
Evaluating Node: ((6 5 0 1 7 4 2 8 3) (6 0 5 1 7 4 2 8 3))
Evaluating Node: ((6 7 5 1 0 4 2 8 3) (6 0 5 1 7 4 2 8 3))
Evaluating Node: ((1 6 5 7 0 4 2 8 3) (1 6 5 0 7 4 2 8 3))
Evaluating Node: ((1 6 5 2 7 4 0 8 3) (1 6 5 0 7 4 2 8 3))
Evaluating Node: ((7 5 4 2 1 6 0 8 3) (7 5 4 0 1 6 2 8 3))
Evaluating Node: ((0 5 4 7 1 6 2 8 3) (7 5 4 0 1 6 2 8 3))
Evaluating Node: ((7 5 4 1 8 6 2 3 0) (7 5 4 1 8 6 2 0 3))
Evaluating Node: ((7 5 4 1 8 6 0 2 3) (7 5 4 1 8 6 2 0 3))
Evaluating Node: ((7 5 4 0 8 6 2 1 3) (7 5 4 1 8 6 2 0 3))
Evaluating Node: ((5 0 4 1 7 6 2 8 3) (0 5 4 1 7 6 2 8 3))
Evaluating Node: ((1 5 4 0 7 6 2 8 3) (0 5 4 1 7 6 2 8 3))
Evaluating Node: ((7 5 4 1 6 3 0 2 8) (7 5 4 1 6 3 2 0 8))
Evaluating Node: ((7 5 4 0 6 3 2 1 8) (7 5 4 1 6 3 2 0 8))
Evaluating Node: ((7 5 4 6 0 3 2 8 1) (7 5 4 0 6 3 2 8 1))
Evaluating Node: ((7 5 4 2 6 3 0 8 1) (7 5 4 0 6 3 2 8 1))
Evaluating Node: ((0 5 4 7 6 3 2 8 1) (7 5 4 0 6 3 2 8 1))
Evaluating Node: ((5 4 0 1 6 7 2 8 3) (5 0 4 1 6 7 2 8 3))
Evaluating Node: ((5 6 4 1 0 7 2 8 3) (5 0 4 1 6 7 2 8 3))
Evaluating Node: ((1 5 4 6 0 7 2 8 3) (1 5 4 0 6 7 2 8 3))
Evaluating Node: ((1 5 4 2 6 7 0 8 3) (1 5 4 0 6 7 2 8 3))
Evaluating Node: ((1 7 5 6 4 3 2 8 0) (1 7 5 6 4 0 2 8 3))
Evaluating Node: ((0 7 5 6 4 1 2 8 3) (1 7 5 6 4 0 2 8 3))
Evaluating Node: ((1 7 5 6 8 4 2 3 0) (1 7 5 6 8 4 2 0 3))
Evaluating Node: ((1 7 5 6 8 4 0 2 3) (1 7 5 6 8 4 2 0 3))
Evaluating Node: ((1 7 5 0 8 4 2 6 3) (1 7 5 6 8 4 2 0 3))
Evaluating Node: ((7 0 5 6 1 4 2 8 3) (0 7 5 6 1 4 2 8 3))
Evaluating Node: ((6 7 5 0 1 4 2 8 3) (0 7 5 6 1 4 2 8 3))
Evaluating Node: ((1 7 5 2 6 4 8 3 0) (1 7 5 2 6 4 8 0 3))
Evaluating Node: ((1 7 5 0 6 4 8 2 3) (1 7 5 2 6 4 8 0 3))
Evaluating Node: ((7 6 5 1 4 3 0 2 8) (7 6 5 1 4 3 2 0 8))
Evaluating Node: ((7 6 5 0 4 3 2 1 8) (7 6 5 1 4 3 2 0 8))
Evaluating Node: ((7 6 5 4 0 3 2 8 1) (7 6 5 0 4 3 2 8 1))
Evaluating Node: ((7 6 5 2 4 3 0 8 1) (7 6 5 0 4 3 2 8 1))
Evaluating Node: ((0 6 5 7 4 3 2 8 1) (7 6 5 0 4 3 2 8 1))
Evaluating Node: ((6 5 0 1 4 7 2 8 3) (6 0 5 1 4 7 2 8 3))
Evaluating Node: ((6 4 5 1 0 7 2 8 3) (6 0 5 1 4 7 2 8 3))
Evaluating Node: ((1 6 5 4 0 7 2 8 3) (1 6 5 0 4 7 2 8 3))
Evaluating Node: ((1 6 5 2 4 7 0 8 3) (1 6 5 0 4 7 2 8 3))
Evaluating Node: ((7 6 5 2 1 4 8 3 0) (7 6 5 2 1 4 8 0 3))
Evaluating Node: ((7 6 5 0 1 4 8 2 3) (7 6 5 2 1 4 8 0 3))
Evaluating Node: ((6 5 0 7 1 4 2 8 3) (6 0 5 7 1 4 2 8 3))
Evaluating Node: ((6 1 5 7 0 4 2 8 3) (6 0 5 7 1 4 2 8 3))
Evaluating Node: ((7 6 5 8 0 4 2 3 1) (7 6 5 0 8 4 2 3 1))
Evaluating Node: ((7 6 5 2 8 4 0 3 1) (7 6 5 0 8 4 2 3 1))
Evaluating Node: ((0 6 5 7 8 4 2 3 1) (7 6 5 0 8 4 2 3 1))
Evaluating Node: ((7 6 5 8 0 4 1 2 3) (7 6 5 0 8 4 1 2 3))
Length of *open*: 90
Length of *closed*: 91
Solution Path: ((7 0 5 1 6 4 2 8 3) (7 6 5 1 0 4 2 8 3) (7 6 5 1 8 4 2 0 3) (7 6 5 1 8 4 0 2 3) (7 6 5 0 8 4 1 2 3) (7 6 5 8 0 4 1 2 3))
((7 0 5 1 6 4 2 8 3) (7 6 5 1 0 4 2 8 3) (7 6 5 1 8 4 2 0 3) (7 6 5 1 8 4 0 2 3) (7 6 5 0 8 4 1 2 3) (7 6 5 8 0 4 1 2 3))

CL-USER 6 > (depth-first (8-tile '(7 0 5 1 6 4 2 8 3) '(7 6 5 8 0 4 1 2 3)))
Runs out of heap space on lispworks. 
